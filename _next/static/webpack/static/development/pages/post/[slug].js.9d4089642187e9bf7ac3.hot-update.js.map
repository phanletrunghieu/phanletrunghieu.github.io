{"version":3,"file":"static/webpack/static/development/pages/post/[slug].js.9d4089642187e9bf7ac3.hot-update.js","sources":["webpack:///./pages/post/[slug].js"],"sourcesContent":["import React, { PureComponent } from 'react'\nimport { Comments } from 'react-facebook';\nimport Meta from '../../components/Meta'\nimport Header from '../../components/Header'\nimport Footer from '../../components/Footer'\nimport CodeBlock from '../../components/CodeBlock'\nimport matter from 'gray-matter'\nimport ReactMarkdown from 'react-markdown'\nimport {getSlug, reformatDate, truncateSummary} from '../../utils/common'\nimport {getCategory} from '../../utils/category'\nimport styles from '../../styles/Post.module.scss'\nconst glob = require('glob')\n\nexport default class BlogTemplate extends PureComponent {\n    state = {\n        screenWidth: 0,\n    }\n\n    updateScreenWidth = () => {\n        this.setState({screenWidth: window.document.body.clientWidth})\n    }\n\n    componentDidMount(){\n        this.updateScreenWidth()\n        window.addEventListener(\"resize\", this.updateScreenWidth)\n    }\n\n    componentWillUnmount(){\n        window.removeEventListener(\"resize\", this.updateScreenWidth)\n    }\n\n    render() {\n        const {siteTitle, markdownBody, frontmatter, categories} = this.props\n        \n        if(!frontmatter) return null\n\n        const imageStyle = {\n            backgroundImage: `url(${frontmatter.image})`,\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n            width: \"100%\",\n            height: this.state.screenWidth / 1265 * 500,\n        }\n        \n        return (\n            <div>\n                <Meta\n                    title={`${frontmatter.title} - ${siteTitle}`}\n                    description={truncateSummary(markdownBody)}\n                    image={frontmatter.image}\n                />\n                <Header categories={categories} />\n                <div style={{marginTop: 120, marginBottom: 50}}>\n                    <div className={styles.headerContainer}>\n                        <h1>{frontmatter.title}</h1>\n                        <div className={styles.subHeader}>\n                            <p className={styles.date}>{reformatDate(frontmatter.date)}</p>\n                            <span className={styles.readDuration}>{frontmatter.readDuration}</span>\n                        </div>\n                    </div>\n                    <div style={imageStyle} />\n                    <div className={styles.content}>\n                        <ReactMarkdown\n                            source={markdownBody}\n                            renderers={{ code: CodeBlock }}\n                        />\n                    </div>\n                    <div className={styles.comments}>\n                        <Comments href={this.props.host + \"/post/\" + this.props.slug} />\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nBlogTemplate.defaultProps = {\n    categories: [],\n}\n\nexport async function getStaticProps(ctx) {\n    const { slug } = ctx.params\n    const siteConfig = await import(`../../data/config.json`)\n    const content = await import(`../../posts/${slug}.md`)\n    const data = matter(content.default)\n\n    let categories = getCategory()\n\n    return {\n        props: {\n            slug,\n            siteTitle: siteConfig.title,\n            frontmatter: data.data,\n            markdownBody: data.content,\n            categories,\n            host: siteConfig.url,\n        },\n    }\n}\n\nexport async function getStaticPaths() {\n    //get all .md files in the posts dir\n    const posts = glob.sync('posts/*.md')\n    //remove path and extension to leave filename only\n    const postSlugs = posts.map(file =>\n        getSlug(file).slice(0, -3)\n    )\n  \n    // create paths with `slug` param\n    const paths = postSlugs.map(slug => `/post/${slug}`)\n    return {\n        paths,\n        fallback: true,\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA7DA;AACA;;AADA;AAgEA;AACA;AADA;;;;A","sourceRoot":""}